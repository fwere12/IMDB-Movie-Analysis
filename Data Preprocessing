import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Uploading our dataset
df = pd.read_csv(r"C:\Users\Administrator\Documents\GitHub\IMDB-Movie-Analysis\Final_IMDB_Movies.csv")
df.head(5)

df.dtypes

#Summary statistics
df.describe().T

#Checking for missing values
print (df.isnull().sum())

#Count rows
row_count = df.shape
print(row_count)

#We will drop the null value
df.dropna(subset = ["language"], inplace=True)
print(df.isnull().sum())

#Dropping the movie_imdb_link column because we dont need it
df.drop(["movie_imdb_link"], axis=1, inplace=True)
print(df.head(5))

print(df.columns)

print(df.dtypes)

#Correlation Matrix
selected_columns =['imdb_score', 'facenumber_in_poster', 'num_voted_users', 'num_user_for_reviews' ,'num_critic_for_reviews']
selected_data = df[selected_columns]
correlation_matrix = selected_data.corr()
plt.figure(figsize=(10,8))
sns.heatmap(correlation_matrix,annot =True,cmap = 'crest',fmt='.2f',linewidth=0.5)
plt.title('Correlation Matrix')
plt.show()

#saving our plot
plt.savefig("plot.png") 

genre_counts = df['genres'].value_counts()
top_genres = genre_counts.head(10)
plt.figure(figsize=(10,6))
top_genres.plot(kind='bar',color='skyblue')
plt.title('Top Genres For movies with highest IMDB Ratings')
plt.xlabel('Genre')
plt.ylabel('Number of movies')
plt.xticks(rotation = 45,ha ='right')
plt.show()

plt.figure(figsize=(10,6))
plt.scatter(df['num_voted_users'],df['aspect_ratio'],alpha=0.5,color ='blue')
plt.title('Relationship between viewer votes and IMDB Ratings')
plt.xlabel('User votes')
plt.ylabel('IMDB Rating')
plt.show()

columns_of_interest = ['director_name','cast_total_facebook_likes','imdb_score']
data = df[columns_of_interest]
director_ratings = data.groupby('director_name')['imdb_score'].mean()
actor_ratings = data.groupby('cast_total_facebook_likes')['imdb_score'].mean()
print('Average IMDB Score by Director')
print(director_ratings.sort_values(ascending=False))
print('\nAverage IMDB Ratings of Actor:')
print(actor_ratings.sort_values(ascending = False))

#Movie score by language
plt.figure(figsize=(14, 8))
sns.barplot(x='imdb_score', y='language', data=df, palette='viridis')
plt.xlabel('IMDB Score')
plt.ylabel('Language')
plt.title('Average Movie Rating by Language')
plt.show()
